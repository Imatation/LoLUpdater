<Window

    x:Class="LoLUpdater.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="LoLUpdater" ResizeMode="NoResize" WindowStyle="None" WindowStartupLocation="CenterScreen" Foreground="White" SizeToContent="WidthAndHeight">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#3E3E40" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#007ACC" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#007ACC" />
        <Style x:Key="CheckboxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="M 1,3 C1,3 1,6 1,6 1,6 4,9 4,9 4,9 9,3 9,3 9,3 9,0 9,0 9,0 4,6 4,6 4,6 1,3 1,3 z" Fill="{TemplateBinding TextElement.Foreground}" Margin="2,1,1,1" Opacity="0" Stretch="Uniform" />
                                    <Rectangle x:Name="indeterminateMark" Fill="{TemplateBinding TextElement.Foreground}" Margin="2" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                                <Setter Property="Foreground" Value="#007ACC" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#3E3E40" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#007ACC" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#FFCCCCCC" />
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#3E3E40" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#007ACC" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{TemplateBinding TextElement.Foreground}" MinWidth="6" MinHeight="6" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="#3E3E40" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="#007ACC" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="#2D2D30" Height="156" HorizontalAlignment="Left" Width="512" Margin="0,0,-1,0">

        <Image x:Name="Xclose" HorizontalAlignment="Left" Height="26" Margin="478,0,0,0" Source="Resources/close.png" VerticalAlignment="Top" Width="34" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseDown="Xclose_MouseDown" />
        <Image x:Name="Xminimize" HorizontalAlignment="Left" Height="26" Margin="444,0,0,0" Source="Resources/minimize.png" VerticalAlignment="Top" Width="34" MouseEnter="Image_MouseEnter_1" MouseLeave="Image_MouseLeave_1" MouseDown="Xminimize_MouseDown" RenderTransformOrigin="-0.868,0.577" />
        <Button Background="#2D2D30" Foreground="White" Content="Go" HorizontalAlignment="Left" Margin="1,126,0,0" VerticalAlignment="Top" Width="510"  Click="OK_Click">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Padding" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="#3E3E40" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="#007ACC" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="#3E3E40" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="#007ACC" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="LoLUpdater" VerticalAlignment="Top" Foreground="Gray" />
        <GroupBox Header="Main" HorizontalAlignment="Left" Margin="1,31,0,0" VerticalAlignment="Top" Height="51" Width="76"  Foreground="White">
            <Grid>
                <RadioButton x:Name="Remove" Content="Uninstall" HorizontalAlignment="Left" Margin="0,15,0,0" VerticalAlignment="Top"  Foreground="White"  Style="{DynamicResource RadioButtonStyle1}" />
                <RadioButton x:Name="Patch" Content="Install" HorizontalAlignment="Left" VerticalAlignment="Top"  Foreground="White" Style="{DynamicResource RadioButtonStyle1}" IsChecked="True" />
            </Grid>
        </GroupBox>

        <ListBox HorizontalAlignment="Left" Height="43" Margin="78,39,0,0" VerticalAlignment="Top" Width="99" Background="#2D2D30">
            <CheckBox x:Name="AdobeAIR" Content="Adobe AIR"  Foreground="White"  Checked="Flash_Checked" Style="{DynamicResource CheckboxStyle}" ToolTip="Provides you a link to the Adobe AIR redistributable so you can install it before patching. This upgrades the PvP.NET client." />
            <CheckBox x:Name="Flash" Content="Adobe Flash"  Foreground="White"  Checked="AdobeAIR_Checked" Style="{DynamicResource CheckboxStyle}" ToolTip="Provides you a link to the Adobe AIR redistributable so you can install it before patching. This upgrades the PvP.NET client." />
        </ListBox>

        <ListBox HorizontalAlignment="Left" Height="82" Margin="178,39,0,0" VerticalAlignment="Top" Width="78" Background="#2D2D30">
            <CheckBox x:Name="Cg" Content="Cg"  Foreground="White"  Checked="Cg_Checked"  Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
            <CheckBox x:Name="CgD3D9" Content="CgD3D9"  Foreground="White"  Checked="Cg_Checked" Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
            <CheckBox x:Name="CgGL" Content="CgGL"  Foreground="White"  Checked="Cg_Checked"  Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
            <CheckBox x:Name="tbb" Content="TBB"  Foreground="White"  Style="{DynamicResource CheckboxStyle}" ToolTip="Installs a custom lightweight tbb.dll file that increases the fps of the game, This makes multiprocessing available for LoL." />
        </ListBox>

        <ListBox HorizontalAlignment="Left" Height="62" Margin="257,39,0,0" VerticalAlignment="Top" Width="81" Background="#2D2D30">
            <CheckBox x:Name="Cg1" Content="Cg"  Foreground="White"  Checked="Cg_Checked" Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
            <CheckBox x:Name="CgD3D1" Content="CgD3D9"  Foreground="White"  Checked="Cg_Checked"  Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
            <CheckBox x:Name="CgGL1" Content="CgGL"  Foreground="White"   Checked="Cg_Checked"  Style="{DynamicResource CheckboxStyle}" ToolTip="Installs one of the DLLs from the Nvidia CG toolkit, yes you need it even if you are on ATI/Intel. This modifies the shader." />
        </ListBox>

        <ListBox HorizontalAlignment="Left" Height="62" VerticalAlignment="Top" Width="172" Margin="339,39,0,0" Background="#2D2D30">
            <CheckBox x:Name="Inking" Content="No Inking"  Foreground="White"  Style="{DynamicResource CheckboxStyle}" ToolTip="Turns off the new 'graphics'." />
            <CheckBox x:Name="AdvancedReflection" Content="No Advanced Reflection"  Foreground="White"  Style="{DynamicResource CheckboxStyle}" ToolTip="Turns off the reflections." />
            <CheckBox x:Name="PerPixelPointLighting" Content="No PerPixelPointLightning"  Foreground="White"  Style="{DynamicResource CheckboxStyle}" ToolTip="Turns off the particles." />
        </ListBox>
        <TextBlock HorizontalAlignment="Left" Margin="78,23,0,0" TextWrapping="Wrap" Text="Pvp.Net Client" VerticalAlignment="Top" RenderTransformOrigin="0.107,0.731" />
        <TextBlock HorizontalAlignment="Left" Margin="178,23,0,0" TextWrapping="Wrap" Text="Game Client" VerticalAlignment="Top" />
        <TextBlock HorizontalAlignment="Left" Margin="257,23,0,0" TextWrapping="Wrap" Text="Launcher" VerticalAlignment="Top" />
        <TextBlock HorizontalAlignment="Left" Margin="339,23,0,0" TextWrapping="Wrap" Text="Config Tweaks" VerticalAlignment="Top" />
    </Grid>
</Window>