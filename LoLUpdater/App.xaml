<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="LoLUpdater.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         
    	<Style TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Grid>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
    									<VisualTransition GeneratedDuration="0" To="Pressed"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFD8AC49"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.499"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBB6D1B"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB96205"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB75919"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF4A240F"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.496"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF532A03"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF5F350F"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF8F6928"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FDA28A80"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.504"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF999999"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF7A6D68"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Rectangle x:Name="rectangle" RadiusY="3.25" RadiusX="3.25" Stroke="#FFA79276">
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF9C3F16" Offset="1"/>
    									<GradientStop Color="#FFD2A03F"/>
    									<GradientStop Color="#FF954800" Offset="0.5"/>
    									<GradientStop Color="#FFAB6720" Offset="0.496"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    	<Style TargetType="{x:Type ListBox}">
    		<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ListBox}">
    					<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true" CornerRadius="10">
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FF091929" Offset="0"/>
    								<GradientStop Color="#FF0B121C" Offset="0.5"/>
    								<GradientStop Color="#FF091929" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.Background>
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FF4C6279" Offset="0"/>
    								<GradientStop Color="#FF0B121C" Offset="0.5"/>
    								<GradientStop Color="#FF4C6279" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Foreground="#FFB59214">
    							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						</ScrollViewer>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
    						</Trigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsGrouping" Value="true"/>
    								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    						</MultiTrigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="FocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    	<Style x:Key="OptionMarkFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    	<Style TargetType="{x:Type CheckBox}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type CheckBox}">
    					<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
    							<Grid x:Name="markGrid">
    								<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
    								<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
    							</Grid>
    						</Border>
    						<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasContent" Value="true">
    							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
    							<Setter Property="Padding" Value="4,-1,0,0"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="true">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="true">
    							<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
    							<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="{x:Null}">
    							<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
    							<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    	<Style TargetType="{x:Type GroupBox}">
    		<Setter Property="BorderBrush" Value="#D5DFE5"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type GroupBox}">
    					<Grid SnapsToDevicePixels="true" Margin="0,0,0.333,0">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="0"/>
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="Auto" MinHeight="4"/>
    							<RowDefinition Height="Auto" MinHeight="16"/>
    							<RowDefinition/>
    							<RowDefinition Height="6"/>
    						</Grid.RowDefinitions>
    						<Rectangle HorizontalAlignment="Left" Height="Auto" Margin="0,0.006,-93.666,0.244" Grid.RowSpan="4" VerticalAlignment="Stretch" Width="93.666" RadiusX="10" RadiusY="10" RenderTransformOrigin="0.5,0.5">
    							<Rectangle.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform AngleY="0.207"/>
    									<RotateTransform/>
    									<TranslateTransform Y="0.163"/>
    								</TransformGroup>
    							</Rectangle.RenderTransform>
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF172333" Offset="0"/>
    									<GradientStop Color="#FF172333" Offset="1"/>
    									<GradientStop Color="#FF0C131D" Offset="0.491"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    							<Rectangle.Stroke>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF5D7B97" Offset="0"/>
    									<GradientStop Color="#FF5D7B97" Offset="1"/>
    									<GradientStop Color="#FF0C131D" Offset="0.5"/>
    								</LinearGradientBrush>
    							</Rectangle.Stroke>
    						</Rectangle>
    						<Border x:Name="Header" Grid.Column="0" Padding="3,1,3,0" Grid.Row="1" Margin="7,0,-33.58,0" Grid.RowSpan="1" HorizontalAlignment="Left" Width="26.58" Height="15.96" VerticalAlignment="Top">
    							<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="-3,-1,-3,0" HorizontalAlignment="Stretch" Width="Auto" TextBlock.Foreground="#FFB59214"/>
    						</Border>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
         
    </Application.Resources>
</Application>
