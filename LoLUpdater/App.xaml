<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d" x:Class="LoLUpdater.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         
    	<Style TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Grid>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
    									<VisualTransition GeneratedDuration="0" To="Pressed"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFD8AC49"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.499"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBB6D1B"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB96205"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB75919"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF4A240F"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.496"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF532A03"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF5F350F"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF8F6928"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FDA28A80"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.504"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF999999"/>
    										</ColorAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF7A6D68"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Rectangle x:Name="rectangle" RadiusY="3.25" RadiusX="3.25" Stroke="#FFA79276">
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF9C3F16" Offset="1"/>
    									<GradientStop Color="#FFD2A03F"/>
    									<GradientStop Color="#FF954800" Offset="0.5"/>
    									<GradientStop Color="#FFAB6720" Offset="0.496"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    	<Style TargetType="{x:Type ListBox}">
    		<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ListBox}">
    					<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true" CornerRadius="10">
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FF091929" Offset="0"/>
    								<GradientStop Color="#FF0B121C" Offset="0.5"/>
    								<GradientStop Color="#FF091929" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.Background>
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FF4C6279" Offset="0"/>
    								<GradientStop Color="#FF0B121C" Offset="0.5"/>
    								<GradientStop Color="#FF4C6279" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Foreground="#FFB59214">
    							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2"/>
    						</ScrollViewer>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
    						</Trigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsGrouping" Value="true"/>
    								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    						</MultiTrigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="FocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    	<Style x:Key="OptionMarkFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    	<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    	<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    	<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    	<Style TargetType="{x:Type CheckBox}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type CheckBox}">
    					<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
    							<Grid x:Name="markGrid" Opacity="0.52">
    								<Grid.Background>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FF3E3E3E" Offset="0"/>
    										<GradientStop Color="#FF686868" Offset="1"/>
    									</LinearGradientBrush>
    								</Grid.Background>
    								<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Margin="1" Opacity="0" Stretch="None" Fill="White"/>
    								<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
    							</Grid>
    						</Border>
    						<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasContent" Value="true">
    							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
    							<Setter Property="Padding" Value="4,-1,0,0"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="true">
    							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
    							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
    							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="true">
    							<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
    							<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="{x:Null}">
    							<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
    							<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    	<Style TargetType="{x:Type GroupBox}">
    		<Setter Property="BorderBrush" Value="#D5DFE5"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type GroupBox}">
    					<Grid SnapsToDevicePixels="true">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="6"/>
    							<ColumnDefinition Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    							<ColumnDefinition Width="6"/>
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="Auto"/>
    							<RowDefinition Height="Auto" MinHeight="20.585"/>
    							<RowDefinition/>
    							<RowDefinition Height="6"/>
    						</Grid.RowDefinitions>
    						<Rectangle Grid.ColumnSpan="4" HorizontalAlignment="Stretch" Height="Auto" RadiusY="10" RadiusX="10" Grid.RowSpan="4" VerticalAlignment="Stretch" Width="Auto">
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF172333" Offset="0"/>
    									<GradientStop Color="#FF172333" Offset="1"/>
    									<GradientStop Color="#FF0C131D" Offset="0.491"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    							<Rectangle.Stroke>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF5D7B97" Offset="0"/>
    									<GradientStop Color="#FF5D7B97" Offset="1"/>
    									<GradientStop Color="#FF0C131D" Offset="0.5"/>
    								</LinearGradientBrush>
    							</Rectangle.Stroke>
    						</Rectangle>
    						<Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
    							<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,3.625,0,0" TextBlock.Foreground="#FFB59214"/>
    						</Border>
    						<ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
         
    	<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
    		<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    	<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    	<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    	<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFECF4FC" Offset="0.0"/>
    		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    	<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFEBF4FC" Offset="0.0"/>
    		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    	<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    	<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFDAECFC" Offset="0.0"/>
    		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    	<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
    		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    	<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="ClickMode" Value="Press"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFB7BABC" Offset="0"/>
    								<GradientStop Color="#FF5E6061" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFF9F5E6" Offset="0"/>
    								<GradientStop Color="#FFDDD4B0" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.Background>
    						<Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
    							<Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
    						</Border>
    					</Border>
    					<ControlTemplate.Triggers>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
    								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
    								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
    								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
    							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
    							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
    						</MultiDataTrigger>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
    						</Trigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
    						</MultiDataTrigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
    							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
    							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
    						</MultiDataTrigger>
    						<Trigger Property="IsPressed" Value="true">
    							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
    						</Trigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
    						</MultiDataTrigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
    							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
    							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
    						</MultiDataTrigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
    						</Trigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
    						</MultiDataTrigger>
    						<MultiDataTrigger>
    							<MultiDataTrigger.Conditions>
    								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
    								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
    							</MultiDataTrigger.Conditions>
    							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
    							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
    							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
    							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
    						</MultiDataTrigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="*"/>
    				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
    			</Grid.ColumnDefinitions>
    			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom"/>
    			<ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" SnapsToDevicePixels="True" Height="Auto" Width="Auto" Grid.ColumnSpan="2">
    				<ToggleButton.Background>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="White" Offset="1"/>
    					</LinearGradientBrush>
    				</ToggleButton.Background>
    				<ToggleButton.BorderBrush>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FFB7BABC" Offset="0"/>
    						<GradientStop Color="#FF4B3737" Offset="1"/>
    					</LinearGradientBrush>
    				</ToggleButton.BorderBrush>
    				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
    					<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
    						<ScrollViewer x:Name="DropDownScrollViewer">
    							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
    								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    									<Rectangle x:Name="opaqueRect" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
    								</Canvas>
    								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    							</Grid>
    						</ScrollViewer>
    					</Border>
    				</Themes:SystemDropShadowChrome>
    			</ToggleButton>
    			<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
    				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
    			</Trigger>
    			<Trigger Property="HasItems" Value="false">
    				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
    			</Trigger>
    			<MultiTrigger>
    				<MultiTrigger.Conditions>
    					<Condition Property="IsGrouping" Value="true"/>
    					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
    				</MultiTrigger.Conditions>
    				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    			</MultiTrigger>
    			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
    				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="AllowDrop" Value="true"/>
    		<Setter Property="MinWidth" Value="0"/>
    		<Setter Property="MinHeight" Value="0"/>
    		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type TextBox}">
    					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="*"/>
    				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
    			</Grid.ColumnDefinitions>
    			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
    				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
    					<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    						<ScrollViewer x:Name="DropDownScrollViewer">
    							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
    								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    									<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
    								</Canvas>
    								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    							</Grid>
    						</ScrollViewer>
    					</Border>
    				</Themes:SystemDropShadowChrome>
    			</Popup>
    			<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
    			<Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
    				<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    			</Border>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
    			</Trigger>
    			<Trigger Property="IsKeyboardFocusWithin" Value="true">
    				<Setter Property="Foreground" Value="Black"/>
    			</Trigger>
    			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
    				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
    			</Trigger>
    			<Trigger Property="HasItems" Value="false">
    				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
    			</Trigger>
    			<MultiTrigger>
    				<MultiTrigger.Conditions>
    					<Condition Property="IsGrouping" Value="true"/>
    					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
    				</MultiTrigger.Conditions>
    				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    			</MultiTrigger>
    			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
    				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<Style TargetType="{x:Type ComboBox}">
    		<Setter Property="FocusVisualStyle">
    			<Setter.Value>
    				<Style>
    					<Setter Property="Control.Template">
    						<Setter.Value>
    							<ControlTemplate>
    								<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    							</ControlTemplate>
    						</Setter.Value>
    					</Setter>
    				</Style>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Background">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    					<GradientStop Color="#FFF0F0F0" Offset="0"/>
    					<GradientStop Color="#FFE5E5E5" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="BorderBrush" Value="#FFACACAC"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="Padding" Value="6,3,5,3"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ComboBox}">
    					<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="*"/>
    							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
    						</Grid.ColumnDefinitions>
    						<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
    							<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
    								<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    									<ScrollViewer x:Name="DropDownScrollViewer">
    										<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
    											<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    												<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
    											</Canvas>
    											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    										</Grid>
    									</ScrollViewer>
    								</Border>
    							</Themes:SystemDropShadowChrome>
    						</Popup>
    						<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboBoxToggleButton}"/>
    						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
    							<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
    							<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
    						</Trigger>
    						<Trigger Property="HasItems" Value="False">
    							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    						</Trigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsGrouping" Value="True"/>
    								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    						</MultiTrigger>
    						<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
    							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="IsEditable" Value="True">
    				<Setter Property="IsTabStop" Value="False"/>
    				<Setter Property="Padding" Value="2"/>
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type ComboBox}">
    							<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="*"/>
    									<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
    								</Grid.ColumnDefinitions>
    								<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
    									<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
    										<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    											<ScrollViewer x:Name="DropDownScrollViewer">
    												<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
    													<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    														<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
    													</Canvas>
    													<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    												</Grid>
    											</ScrollViewer>
    										</Border>
    									</Themes:SystemDropShadowChrome>
    								</Popup>
    								<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
    									<ToggleButton.Style>
    										<Style TargetType="{x:Type ToggleButton}">
    											<Setter Property="OverridesDefaultStyle" Value="True"/>
    											<Setter Property="IsTabStop" Value="False"/>
    											<Setter Property="Focusable" Value="False"/>
    											<Setter Property="ClickMode" Value="Press"/>
    											<Setter Property="Template">
    												<Setter.Value>
    													<ControlTemplate TargetType="{x:Type ToggleButton}">
    														<Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
    															<Border.Background>
    																<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																	<GradientStop Color="#FFF0F0F0" Offset="0"/>
    																	<GradientStop Color="#FFE5E5E5" Offset="1"/>
    																</LinearGradientBrush>
    															</Border.Background>
    															<Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
    																<Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
    															</Border>
    														</Border>
    														<ControlTemplate.Triggers>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
    																	<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
    																	<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
    																	<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot" Value="White"/>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
    																<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
    																<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
    															</MultiDataTrigger>
    															<Trigger Property="IsMouseOver" Value="True">
    																<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
    															</Trigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot">
    																	<Setter.Value>
    																		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																			<GradientStop Color="#FFECF4FC" Offset="0"/>
    																			<GradientStop Color="#FFDCECFC" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Setter.Value>
    																</Setter>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
    															</MultiDataTrigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot" Value="White"/>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
    																<Setter Property="Background" TargetName="splitBorder">
    																	<Setter.Value>
    																		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																			<GradientStop Color="#FFEBF4FC" Offset="0"/>
    																			<GradientStop Color="#FFDCECFC" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Setter.Value>
    																</Setter>
    																<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
    															</MultiDataTrigger>
    															<Trigger Property="IsPressed" Value="True">
    																<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
    															</Trigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot">
    																	<Setter.Value>
    																		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																			<GradientStop Color="#FFDAECFC" Offset="0"/>
    																			<GradientStop Color="#FFC4E0FC" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Setter.Value>
    																</Setter>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
    															</MultiDataTrigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot" Value="White"/>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
    																<Setter Property="Background" TargetName="splitBorder">
    																	<Setter.Value>
    																		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																			<GradientStop Color="#FFDAEBFC" Offset="0"/>
    																			<GradientStop Color="#FFC4E0FC" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Setter.Value>
    																</Setter>
    																<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
    															</MultiDataTrigger>
    															<Trigger Property="IsEnabled" Value="False">
    																<Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
    															</Trigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
    															</MultiDataTrigger>
    															<MultiDataTrigger>
    																<MultiDataTrigger.Conditions>
    																	<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
    																	<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
    																</MultiDataTrigger.Conditions>
    																<Setter Property="Background" TargetName="templateRoot" Value="White"/>
    																<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
    																<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
    																<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
    															</MultiDataTrigger>
    														</ControlTemplate.Triggers>
    													</ControlTemplate>
    												</Setter.Value>
    											</Setter>
    										</Style>
    									</ToggleButton.Style>
    								</ToggleButton>
    								<Border x:Name="Border" Background="White" Margin="{TemplateBinding BorderThickness}">
    									<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
    										<TextBox.Style>
    											<Style TargetType="{x:Type TextBox}">
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="AllowDrop" Value="True"/>
    												<Setter Property="MinWidth" Value="0"/>
    												<Setter Property="MinHeight" Value="0"/>
    												<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    												<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    												<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type TextBox}">
    															<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</TextBox.Style>
    									</TextBox>
    								</Border>
    							</Grid>
    							<ControlTemplate.Triggers>
    								<Trigger Property="IsEnabled" Value="False">
    									<Setter Property="Opacity" TargetName="Border" Value="0.56"/>
    								</Trigger>
    								<Trigger Property="IsKeyboardFocusWithin" Value="True">
    									<Setter Property="Foreground" Value="Black"/>
    								</Trigger>
    								<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
    									<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
    									<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
    								</Trigger>
    								<Trigger Property="HasItems" Value="False">
    									<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    								</Trigger>
    								<MultiTrigger>
    									<MultiTrigger.Conditions>
    										<Condition Property="IsGrouping" Value="True"/>
    										<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
    									</MultiTrigger.Conditions>
    									<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    								</MultiTrigger>
    								<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
    									<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    									<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    								</Trigger>
    							</ControlTemplate.Triggers>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
    	<SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
    	<SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    	<SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    	<SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    	<SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    	<SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
    	<SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
    	<SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
    	<SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    	<SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
    	<Style TargetType="{x:Type RadioButton}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type RadioButton}">
    					<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.925">
    							<Border.Background>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF272727" Offset="0"/>
    									<GradientStop Color="Gray" Offset="1"/>
    								</LinearGradientBrush>
    							</Border.Background>
    							<Grid x:Name="markGrid" Margin="2">
    								<Ellipse x:Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0" Height="9.958" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="9.916" Margin="-1.958,-2,-1.958,-1.958">
    									<Ellipse.Fill>
    										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    											<GradientStop Color="#FF533A14" Offset="1"/>
    											<GradientStop Color="#FFCB7723"/>
    										</LinearGradientBrush>
    									</Ellipse.Fill>
    								</Ellipse>
    							</Grid>
    						</Border>
    						<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasContent" Value="true">
    							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
    							<Setter Property="Padding" Value="4,-1,0,0"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
    							<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
    							<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="true">
    							<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
    							<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
    							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="true">
    							<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="{x:Null}">
    							<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	
         
    </Application.Resources>
</Application>
